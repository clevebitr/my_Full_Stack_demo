/* 对 loading  整体布局*/
.loading-wrapper {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* 弹性布局 垂直排列 居中 */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: height 0.2s ease-in-out, margin 0.2s ease-in-out;
}


/* loading 动画图像父级的布局 */
.loading-view {
    width: 110px;
    height: 100px;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 10000;
    transition: height 0.2s ease-in-out, margin 0.2s ease-in-out;
}
.tip-view{
    color: #fff;
    font-size: 15px;
    text-align: center;
    z-index: 10000;
    margin-top: 45px;
}
.container1,
.container2 {
    width: 40px;
    height: 40px;
    position: absolute;
    /* border: 1px solid #ff0000; */
    top: 0;
    left: 50%;
    margin-left: -20px;
    position: absolute;
}

.container2 {
    transform: rotate(45deg);
}

.container1,
.container2 {
    width: 40px;
    height: 40px;
    position: absolute;
    /* border: 1px solid #ff0000; */
    top: 0;
    left: 50%;
    margin-left: -20px;
    position: absolute;
}

.container2 {
    transform: rotate(45deg);
}

/* 第1种动画和第二种的相同部分，其中的 animation 也相同 */
.circle,
.bounce {
    width: 10px;
    height: 10px;
    background-color: #fff;
    border-radius: 50%;
    /* 设置小球动画 */
    animation: loading 1.2s both infinite;
}

.circle {
    position: absolute;
}

/* 设置小球的相对位置 */
.circle1 {
    top: 0;
    left: 0;
}

.circle2 {
    top: 0;
    right: 0;
}

.circle3 {
    bottom: 0;
    right: 0;
}

.circle4 {
    bottom: 0;
    left: 0;
}

/* 设置延时 */
.container1 .circle1 {
    animation-delay: 0s;
}

.container2 .circle1 {
    animation-delay: 0.2s;
}

.container1 .circle2 {
    animation-delay: 0.3s;
}

.container2 .circle2 {
    animation-delay: 0.4s;
}

.container1 .circle3 {
    animation-delay: 0.5s;
}

.container2 .circle3 {
    animation-delay: 0.6s;
}

.container1 .circle4 {
    animation-delay: 0.7s;
}

.container2 .circle5 {
    animation-delay: 0.8s;
}

@keyframes loading {
    0% {
        transform: scale(0);
    }

    40% {
        transform: scale(1);
    }

    80% {
        transform: scale(0);
    }

    100% {
        transform: scale(0);
    }
}

/* 第1种动画和第二种的相同部分，其中的 animation 也相同 */
.circle,
.bounce {
    width: 10px;
    height: 10px;
    background-color: #fff;
    border-radius: 50%;
    /* 设置小球动画 */
    animation: loading 1.2s both infinite;
}

.circle {
    position: absolute;
}

/* 设置小球的相对位置 */
.circle1 {
    top: 0;
    left: 0;
}

.circle2 {
    top: 0;
    right: 0;
}

.circle3 {
    bottom: 0;
    right: 0;
}

.circle4 {
    bottom: 0;
    left: 0;
}

/* 设置延时 */
.container1 .circle1 {
    animation-delay: 0s;
}

.container2 .circle1 {
    animation-delay: 0.2s;
}

.container1 .circle2 {
    animation-delay: 0.3s;
}

.container2 .circle2 {
    animation-delay: 0.4s;
}

.container1 .circle3 {
    animation-delay: 0.5s;
}

.container2 .circle3 {
    animation-delay: 0.6s;
}

.container1 .circle4 {
    animation-delay: 0.7s;
}

.container2 .circle5 {
    animation-delay: 0.8s;
}

@keyframes loading {
    0% {
        transform: scale(0);
    }

    40% {
        transform: scale(1);
    }

    80% {
        transform: scale(0);
    }

    100% {
        transform: scale(0);
    }
}
.bounce-view {
    position: absolute;
    left: 50%;
    top: 40%;
    transform: translate(-50%, -50%);
}

.bounce {
    /* 设置小球形状的样式几乎和type=1一样，重复利用了 */
    display: inline-block;/* 设置小球的布局 */
}

/* 设置延迟 */
.bounce1 {
    animation-delay: -0.32s;
}

.bounce2 {
    animation-delay: -0.16s;
}

.bounce3 {
    animation-delay: 0s;
}

.wave {
    width: 100px;
    height: 40px;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%,-50%);
    display: flex;
    justify-content: space-evenly;
}

.react{
    width: 3px;
    height: 40px;
    background-color: #fff;
    animation: waveLoading 1.2s both infinite;
}

/* 设置延时 */
.react1{
    animation-delay: 0s;
}
.react2{
    animation-delay: -1.1s;
}
.react3{
    animation-delay: -1.0s;
}
.react4{
    animation-delay: -0.9s;
}
.react5{
    animation-delay: -0.8s;
}

@keyframes waveLoading{
    0% {
        transform: scaleY(0.4);
    }
    20% {
        transform: scaleY(1);
    }
    80% {
        transform: scaleY(0.4);
    }
    100% {
        transform: scaleY(0.4);
    }
}